const canvas = document.querySelector('canvas');
const ctx = canvas.getContext('2d');
const heightRange = document.querySelector('#height');
const distRange = document.querySelector('#dist');
const waterHeightRange = document.querySelector('#water');
const heightRangeValue = document.querySelector('#heightvalue');
const distRangeValue = document.querySelector('#distvalue');
const waterHeightRangeValue = document.querySelector('#watervalue');
function fillText(text, x, y) {
    let transform = ctx.getTransform();
    ctx.scale(1, -1);
    ctx.fillText(text, x, (550 - y) - 550);
    ctx.setTransform(transform);
}
function update() {
    let height = parseInt(heightRange.value);
    let dist = parseInt(distRange.value);
    let waterHeight = parseInt(waterHeightRange.value);
    heightRangeValue.innerText = height;
    distRangeValue.innerText = dist;
    waterHeightRangeValue.innerText = waterHeight;
    ctx.clearRect(0, 0, 600, 600);
    ctx.save();
    ctx.translate(50, 550);
    ctx.scale(1, -1);
    ctx.fillStyle = 'red';
    ctx.beginPath();
    ctx.arc(dist * 2, 0, 3, 0, Math.PI * 2);
    ctx.fill();
    fillText('Poisson perçu', dist * 2, -15);
    ctx.fillStyle = '#0044dd77';
    ctx.fillRect(0, 0, 500, waterHeight * 2);
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, 1, height * 2);
    ctx.fillRect(0, 0, dist * 2, 1);
    ctx.beginPath();
    ctx.moveTo(0, height * 2);
    ctx.lineTo(dist * 2, 0);
    ctx.strokeStyle = 'grey';
    ctx.stroke();
    let angle = Math.acos(height / Math.sqrt(dist ** 2 + height ** 2));
    let angleInDegrees = angle * 180 / Math.PI;
    ctx.strokeStyle = 'grey';
    ctx.beginPath();
    ctx.arc(0, height * 2, 20, 0 - Math.PI / 2, angle - Math.PI / 2);
    ctx.stroke();
    ctx.font = '12px Times New Roman';
    fillText(`θ₁ = ${angleInDegrees.toFixed(2)}°`, 4, height * 2 - 30);
    let intersect = (dist / height) * (height - waterHeight);
    ctx.fillRect(intersect * 2, 0, 1, 60 + waterHeight * 2);
    ctx.beginPath();
    ctx.arc(intersect * 2, waterHeight * 2, 20, Math.PI / 2, angle + Math.PI / 2);
    ctx.stroke();
    fillText(`θ₁`, intersect * 2 - 12, waterHeight * 2 + 30);
    let realAngle = Math.asin(Math.sin(angle) / 1.333);
    let realAngleInDegrees = realAngle * 180 / Math.PI;
    let x2 = waterHeight * Math.tan(realAngle);
    let x1 = waterHeight * Math.tan(angle);
    let dist2 = (dist - x1) + x2;
    ctx.beginPath();
    ctx.moveTo(intersect * 2, waterHeight * 2);
    ctx.lineTo(dist2 * 2, 0);
    ctx.stroke();
    ctx.fillStyle = 'blue';
    ctx.beginPath();
    ctx.arc(dist2 * 2, 0, 3, 0, Math.PI * 2);
    ctx.fill();
    fillText('Poisson réel', dist2 * 2 - 40, -15);
    ctx.fillStyle = 'grey';
    ctx.beginPath();
    ctx.arc(intersect * 2, waterHeight * 2, 20, 0 - Math.PI / 2, realAngle - Math.PI / 2);
    ctx.stroke();
    ctx.fillStyle = 'black';
    fillText(`θ₂ = ${realAngleInDegrees.toFixed(2)}°`, intersect * 2 + 3, waterHeight * 2 - 30);
    ctx.beginPath();
    ctx.moveTo(0, height * 2);
    ctx.lineTo(dist2 * 2, 0);
    ctx.stroke();
    let targetAngle = Math.atan(dist2 / height);
    let targetAngleInDegrees = targetAngle * 180 / Math.PI;
    fillText(`Le pêcheur doit viser à ${targetAngleInDegrees.toFixed(2)}° (poisson à ${dist2.toFixed(2)} cm des pieds du pêcheur)`, 100, 200);
    ctx.restore();
}
[heightRange, distRange, waterHeightRange].forEach(element => {
    element.addEventListener('change', update);
    element.addEventListener('input', update);
});
update();